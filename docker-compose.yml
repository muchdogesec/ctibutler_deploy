services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=ctibutler
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 2s
      retries: 10
    expose:
      - "5432:5432"
    ports:
      - "54322:5432"
  redis:
    image: redis:7.4.1
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: bash -c 'exec 6<>/dev/tcp/redis/6379'
      interval: 2s
      retries: 10
    expose:
      - "6379:6379"
    ports:
      - "6379:6379"
  backend_base:
    image: ghcr.io/muchdogesec/ctibutler_web_be_ctibutler_web_staging:main
    command: bash -c "python manage.py migrate && python manage.py collectstatic --noinput"
    environment:
      - CTIBUTLER_SERVICE_BASE_URL=http://37.27.208.239:8006
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./docker-data/backend/static_root:/app/static_root/
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db
      - redis
  backend:
    extends: backend_base
    command: bash -c "python manage.py create_swagger_json && gunicorn project.wsgi -b 0.0.0.0:8000"
    restart: unless-stopped
  frontend:
    image: ghcr.io/muchdogesec/ctibutler_web_fe_ctibutler_web_staging:main
    command: "cp -rf build/ deploy"
    volumes:
      - ./docker-data/frontend:/app/deploy
  nginx:
    image: nginx:1.27
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker-data/frontend/build:/usr/share/nginx/html
      - ./docker-data/backend/static_root:/usr/share/nginx/backend_static/dj-static
    ports:
      - "8080:80"
      - "8001:8000"
      - "8002:8002"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: